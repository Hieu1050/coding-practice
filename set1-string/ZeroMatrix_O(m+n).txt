// 1-7 rotate matrix
// also leetcode: https://leetcode.com/problems/set-matrix-zeroes/
// Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

// You must do it in place.

// Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
// Output: [[1,0,1],[0,0,0],[1,0,1]]

// Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
// Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]
import java.math.BigInteger;
import java.util.Random;
public class ZeroMatrix {
    public static void main(String[] args) {
        int [][] m = generageMatrix(10, 3);
        printMatrix(m);
        System.out.println ();
        Solution(m);

        printMatrix(m);
    }
    public static void Solution (int[][] m){
        BigInteger r0 = new BigInteger("0");
        BigInteger c0 = new BigInteger("0");
        int width = m[0].length;
        int height = m.length;
        for (int i = 0; i < height; i++) {
            // loop thru the rows
            for (int j = 0; j < width; j++) {
                // loop thru the colums
                // if ele is 0: 
                if (m[i][j] == 0) {
                    // remember the row idx
                    r0 = r0.setBit(i);
                    // remember the column idx
                    c0 = c0.setBit(j);
                    System.out.printf("found at [%d,%d]\n", i,j );
                }
            }
        }
        // modify the rows
        for (int i = 0; i < height; i++) {
            if ( r0.testBit(i) ){
                System.out.println (i);
                for (int j = 0; j < width; j++) {
                    m[i][j] = 0;
                }

            }
        }

        // modify the columns
        System.out.println ();
        for (int i = 0; i < width; i++) {
            if (c0.testBit(i)){
                System.out.println (i);
                for (int j = 0; j < height; j++) {
                    m[j][i] = 0;
                }
            }
        }
    }


    static int [][] generageMatrix (int M, int N){
        int [][] res = new int [M][N];
        Random r = new Random();
        for (int i = 0; i < M; i++) {
            for (int j = 0; j < N; j++) {
                res[i][j] = r.nextInt(20);
            }
        }
        return res;
    }
    static void printMatrix (int [][] matrix){
        int M = matrix.length;
        int N = matrix[0].length;
        for (int i = 0; i < M; i++) {
            for (int j = 0; j < N; j++) {
                System.out.printf("%d\t", matrix[i][j]);
            }
            System.out.println ();
        }
    }
}
